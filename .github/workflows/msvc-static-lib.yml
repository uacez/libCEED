name: Windows Optimized Static Library Build

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'include/**'
      - 'Makefile'
      - '.github/workflows/msvc-static-lib.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'include/**'
      - 'Makefile'
      - '.github/workflows/msvc-static-lib.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, x86]
        configuration: [Release, Debug]
        include:
          - configuration: Release
            cflags: "/nologo /O2 /W3 /wd4100 /wd4127 /wd4244 /wd4267 /wd4800 /D_CRT_SECURE_NO_WARNINGS"
            build_dir: build/release
          - configuration: Debug
            cflags: "/nologo /Od /Zi /W3 /wd4100 /wd4127 /wd4244 /wd4267 /wd4800 /D_CRT_SECURE_NO_WARNINGS /D_DEBUG"
            build_dir: build/debug
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}

      - name: Install dependencies
        run: |
          choco install make --no-progress
          make --version  # 验证安装成功
        shell: powershell
        timeout-minutes: 5

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            ${{ matrix.build_dir }}
            lib
          key: ${{ matrix.arch }}-${{ matrix.configuration }}-${{ github.sha }}
          restore-keys: |
            ${{ matrix.arch }}-${{ matrix.configuration }}-

      - name: Create build directory
        run: mkdir -p ${{ matrix.build_dir }}
        shell: bash

      - name: Build static library
        shell: bash
        working-directory: ${{ matrix.build_dir }}
        run: |
          export STATIC=1
          export CC=cl
          export CXX=cl
          export AR=lib
          export ARFLAGS="/NOLOGO"
          export CPPFLAGS="-DCEED_SKIP_VISIBILITY -D__restrict__=__restrict"
          export CFLAGS="${{ matrix.cflags }}"
          export CXXFLAGS="${{ matrix.cflags }}"
          unset OPT
          
          # 执行构建并输出详细日志
          make -C .. lib -e V=1
        timeout-minutes: 10

      - name: Verify build artifacts
        run: |
          $libPath = "lib/libceed.lib"
          if (-not (Test-Path $libPath)) {
            Write-Error "Static library $libPath not found!"
            exit 1
          }
          Write-Host "Found static library: $libPath"
          Get-Item $libPath | Select-Object Name, Length, LastWriteTime
        shell: powershell

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libCEED-static-lib-${{ matrix.arch }}-${{ matrix.configuration }}
          path: |
            lib/libceed.lib
            include/**/*.h
          retention-days: 14
          if-no-files-found: error
